관심사의 분리:
관심이 같은 것끼리는 하나의 객체 안으로 또는 친한 객체로 모이게하고,
관심이 다른 것은 가능한 한 따로 떨어져서 서로 영향을 주지 않도록 분리하는 것

리팩토링:
기존의 코드를 외북의 동작방시게는 변화 없이 내부 구조를 변경해서 재구성하는 작업
=>변화에 효율적으로 대응하고, 유지보수가 용이해짐

결합도: 하나의 오브젝트가 변경이 일어날 때 관계를 맺고 있는 다른 오브젝트에게 변화를 요구하는 정도



제어의 역전
오브젝트가 능동적으로 자신이 사용할 클래스를 결정하고
언제 그 오브젝트를 만들지 스스로 결정한다.결정권이 자신에게 있다. => 제어의 역전X
ex) UserDao dao = new UserDao()

제어의 역전에서는 자신이 사용할 오브젝트를 생성하지도, 선택하지도 않늗다
ex) userDao dao = 외부파일설정
외부파일로 주입받을 객체를 가져왔다면
사용하는 측에서 어떤 객체가 생성되어 주입되었는지 알 수 없다.생성과 주입의 제어권이 다른쪽으로 넘어간 상황
이것이 제어의 역전이다. 결국 역할을 나눈 것

Bean
스프링 컨테이너가 생성, 관계설정, 사용 등을 제어해주는 제어의 역전이 적용된 오브젝트를 가리킨다

Bean Factory:
빈들을 관리하는 곳


ApplicationContext는 여러 구현체가 있는데
@Configuration이 붙은 자바 코드를 설정정보로 사용하려면
AnnotationConfigApplicationContext 사용