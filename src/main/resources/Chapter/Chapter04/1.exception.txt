시스템 예외(unchecked Exception): 시스템상 복구가 불가능한 예외일 경우
스프링의 트랜잭션 기본 전략은 롤백시킨다.

비즈니스 예외(checked Exception) : 복구할 가능성이 조금이라도 있는 경우 예외처리를 강제
비즈니스 로직상 의미가 있는 경우인가??????

자바의 초기 환경, 애플릿이나 AWS, 스윙을 사용한 독립형 애플리케이션에서는 복구 불가능한 예외일지라도 시스템이 중단되지 않게 해주고 상황을 복구해야했음
하지만 웹 애플리케이션을 주로 사용하는 현재 상황에서는 체크 예외의 활용도와 가치가 점점 떨어져가고 있다.
즉, 대부분 예외를 복구 불가능한 unchecked Exception으로 가정하고 RuntimeException으로 변환하여 예외를 던진 후 공통 로직에서 처리하게 해라

ex) SQLException은 대부분 복구 불가능한 예외라 잡아서 처리할 것도 없고, 결국 thorws를 타고 계속 전달되다가 애플리케이션 밖으로 전달될 것 인데
이럴빠에 RuntimeException으로 돌려 던지고 덕지덕지 붙은 throws를 제거해서 다른 layer에서 신경쓰지 않도록 하는게 낫다